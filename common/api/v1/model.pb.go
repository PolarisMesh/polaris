// Code generated by protoc-gen-go. DO NOT EDIT.
// source: model.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MatchString_MatchStringType int32

const (
	// Equivalent match
	MatchString_EXACT MatchString_MatchStringType = 0
	// Regular match
	MatchString_REGEX MatchString_MatchStringType = 1
	// Not equals match
	MatchString_NOT_EQUALS MatchString_MatchStringType = 2
	// Include match
	MatchString_INCLUDE MatchString_MatchStringType = 3
	// Not include match
	MatchString_NOT_INCLUDE MatchString_MatchStringType = 4
)

var MatchString_MatchStringType_name = map[int32]string{
	0: "EXACT",
	1: "REGEX",
	2: "NOT_EQUALS",
	3: "INCLUDE",
	4: "NOT_INCLUDE",
}
var MatchString_MatchStringType_value = map[string]int32{
	"EXACT":       0,
	"REGEX":       1,
	"NOT_EQUALS":  2,
	"INCLUDE":     3,
	"NOT_INCLUDE": 4,
}

func (x MatchString_MatchStringType) String() string {
	return proto.EnumName(MatchString_MatchStringType_name, int32(x))
}
func (MatchString_MatchStringType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_ba03dd4bf7699ee9, []int{1, 0}
}

type MatchString_ValueType int32

const (
	MatchString_TEXT      MatchString_ValueType = 0
	MatchString_PARAMETER MatchString_ValueType = 1
	MatchString_VARIABLE  MatchString_ValueType = 2
)

var MatchString_ValueType_name = map[int32]string{
	0: "TEXT",
	1: "PARAMETER",
	2: "VARIABLE",
}
var MatchString_ValueType_value = map[string]int32{
	"TEXT":      0,
	"PARAMETER": 1,
	"VARIABLE":  2,
}

func (x MatchString_ValueType) String() string {
	return proto.EnumName(MatchString_ValueType_name, int32(x))
}
func (MatchString_ValueType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_model_ba03dd4bf7699ee9, []int{1, 1}
}

type Location struct {
	Region               *wrappers.StringValue `protobuf:"bytes,1,opt,name=region,proto3" json:"region,omitempty"`
	Zone                 *wrappers.StringValue `protobuf:"bytes,2,opt,name=zone,proto3" json:"zone,omitempty"`
	Campus               *wrappers.StringValue `protobuf:"bytes,3,opt,name=campus,proto3" json:"campus,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_ba03dd4bf7699ee9, []int{0}
}
func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (dst *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(dst, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetRegion() *wrappers.StringValue {
	if m != nil {
		return m.Region
	}
	return nil
}

func (m *Location) GetZone() *wrappers.StringValue {
	if m != nil {
		return m.Zone
	}
	return nil
}

func (m *Location) GetCampus() *wrappers.StringValue {
	if m != nil {
		return m.Campus
	}
	return nil
}

type MatchString struct {
	Type                 MatchString_MatchStringType `protobuf:"varint,1,opt,name=type,proto3,enum=v1.MatchString_MatchStringType" json:"type,omitempty"`
	Value                *wrappers.StringValue       `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	ValueType            MatchString_ValueType       `protobuf:"varint,3,opt,name=value_type,json=valueType,proto3,enum=v1.MatchString_ValueType" json:"value_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *MatchString) Reset()         { *m = MatchString{} }
func (m *MatchString) String() string { return proto.CompactTextString(m) }
func (*MatchString) ProtoMessage()    {}
func (*MatchString) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_ba03dd4bf7699ee9, []int{1}
}
func (m *MatchString) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MatchString.Unmarshal(m, b)
}
func (m *MatchString) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MatchString.Marshal(b, m, deterministic)
}
func (dst *MatchString) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MatchString.Merge(dst, src)
}
func (m *MatchString) XXX_Size() int {
	return xxx_messageInfo_MatchString.Size(m)
}
func (m *MatchString) XXX_DiscardUnknown() {
	xxx_messageInfo_MatchString.DiscardUnknown(m)
}

var xxx_messageInfo_MatchString proto.InternalMessageInfo

func (m *MatchString) GetType() MatchString_MatchStringType {
	if m != nil {
		return m.Type
	}
	return MatchString_EXACT
}

func (m *MatchString) GetValue() *wrappers.StringValue {
	if m != nil {
		return m.Value
	}
	return nil
}

func (m *MatchString) GetValueType() MatchString_ValueType {
	if m != nil {
		return m.ValueType
	}
	return MatchString_TEXT
}

type OptionSwitch struct {
	Options              map[string]string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *OptionSwitch) Reset()         { *m = OptionSwitch{} }
func (m *OptionSwitch) String() string { return proto.CompactTextString(m) }
func (*OptionSwitch) ProtoMessage()    {}
func (*OptionSwitch) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_ba03dd4bf7699ee9, []int{2}
}
func (m *OptionSwitch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionSwitch.Unmarshal(m, b)
}
func (m *OptionSwitch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionSwitch.Marshal(b, m, deterministic)
}
func (dst *OptionSwitch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionSwitch.Merge(dst, src)
}
func (m *OptionSwitch) XXX_Size() int {
	return xxx_messageInfo_OptionSwitch.Size(m)
}
func (m *OptionSwitch) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionSwitch.DiscardUnknown(m)
}

var xxx_messageInfo_OptionSwitch proto.InternalMessageInfo

func (m *OptionSwitch) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterType((*Location)(nil), "v1.Location")
	proto.RegisterType((*MatchString)(nil), "v1.MatchString")
	proto.RegisterType((*OptionSwitch)(nil), "v1.OptionSwitch")
	proto.RegisterMapType((map[string]string)(nil), "v1.OptionSwitch.OptionsEntry")
	proto.RegisterEnum("v1.MatchString_MatchStringType", MatchString_MatchStringType_name, MatchString_MatchStringType_value)
	proto.RegisterEnum("v1.MatchString_ValueType", MatchString_ValueType_name, MatchString_ValueType_value)
}

func init() { proto.RegisterFile("model.proto", fileDescriptor_model_ba03dd4bf7699ee9) }

var fileDescriptor_model_ba03dd4bf7699ee9 = []byte{
	// 397 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xcf, 0x6e, 0x9b, 0x40,
	0x10, 0xc6, 0xbb, 0x40, 0x12, 0x33, 0xa4, 0x09, 0x5a, 0xf5, 0x40, 0xa3, 0xfe, 0x89, 0x38, 0xe5,
	0x44, 0x1a, 0x52, 0xa9, 0x91, 0x6f, 0xd4, 0x5d, 0x55, 0x96, 0xb0, 0xdd, 0xae, 0xb1, 0xe5, 0x9b,
	0x85, 0xe9, 0x16, 0xa3, 0xda, 0x2c, 0x02, 0x8c, 0x45, 0xaf, 0x7d, 0x99, 0xbe, 0x43, 0x5f, 0xae,
	0xda, 0xc5, 0x44, 0xc8, 0x27, 0xdf, 0xbe, 0xdd, 0xf9, 0x7d, 0xf3, 0xcd, 0xce, 0x82, 0xb1, 0xe5,
	0x3f, 0xd8, 0xc6, 0xc9, 0x72, 0x5e, 0x72, 0xac, 0x54, 0x0f, 0x37, 0xef, 0x62, 0xce, 0xe3, 0x0d,
	0xbb, 0x97, 0x37, 0xab, 0xdd, 0xcf, 0xfb, 0x7d, 0x1e, 0x66, 0x19, 0xcb, 0x8b, 0x86, 0xb1, 0xff,
	0x22, 0xe8, 0xf9, 0x3c, 0x0a, 0xcb, 0x84, 0xa7, 0xf8, 0x23, 0x9c, 0xe7, 0x2c, 0x4e, 0x78, 0x6a,
	0xa1, 0x5b, 0x74, 0x67, 0xb8, 0x6f, 0x9c, 0xc6, 0xed, 0xb4, 0x6e, 0x67, 0x5a, 0xe6, 0x49, 0x1a,
	0xcf, 0xc3, 0xcd, 0x8e, 0xd1, 0x03, 0x8b, 0x3f, 0x80, 0xf6, 0x9b, 0xa7, 0xcc, 0x52, 0x4e, 0xf0,
	0x48, 0x52, 0xe4, 0x44, 0xe1, 0x36, 0xdb, 0x15, 0x96, 0x7a, 0x4a, 0x4e, 0xc3, 0xda, 0xff, 0x14,
	0x30, 0x46, 0x61, 0x19, 0xad, 0x9b, 0x22, 0x7e, 0x04, 0xad, 0xac, 0x33, 0x26, 0x67, 0xbd, 0x72,
	0xdf, 0x3b, 0xd5, 0x83, 0xd3, 0x29, 0x77, 0x75, 0x50, 0x67, 0x8c, 0x4a, 0x18, 0xbb, 0x70, 0x56,
	0x89, 0xae, 0x27, 0x4d, 0xdb, 0xa0, 0xf8, 0x09, 0x40, 0x8a, 0xa5, 0x8c, 0x53, 0x65, 0xdc, 0xeb,
	0xe3, 0x38, 0xe9, 0x90, 0x41, 0x7a, 0xd5, 0x4a, 0x7b, 0x06, 0xd7, 0x47, 0x63, 0x60, 0x1d, 0xce,
	0xc8, 0xc2, 0x1b, 0x04, 0xe6, 0x0b, 0x21, 0x29, 0xf9, 0x4a, 0x16, 0x26, 0xc2, 0x57, 0x00, 0xe3,
	0x49, 0xb0, 0x24, 0xdf, 0x67, 0x9e, 0x3f, 0x35, 0x15, 0x6c, 0xc0, 0xc5, 0x70, 0x3c, 0xf0, 0x67,
	0x5f, 0x88, 0xa9, 0xe2, 0x6b, 0x30, 0x44, 0xb1, 0xbd, 0xd0, 0x6c, 0x17, 0xf4, 0xe7, 0x38, 0xdc,
	0x03, 0x2d, 0x20, 0x0b, 0xd1, 0xef, 0x25, 0xe8, 0xdf, 0x3c, 0xea, 0x8d, 0x48, 0x40, 0xa8, 0x89,
	0xf0, 0x25, 0xf4, 0xe6, 0x1e, 0x1d, 0x7a, 0x9f, 0x7d, 0x62, 0x2a, 0xf6, 0x1f, 0x04, 0x97, 0x93,
	0x4c, 0x7c, 0xf3, 0x74, 0x9f, 0x94, 0xd1, 0x1a, 0x7f, 0x82, 0x0b, 0x2e, 0xcf, 0x85, 0x85, 0x6e,
	0xd5, 0x3b, 0xc3, 0x7d, 0x2b, 0x9e, 0xd4, 0x45, 0x0e, 0x87, 0x82, 0xa4, 0x65, 0x5e, 0xd3, 0x96,
	0xbe, 0xe9, 0xb7, 0x8d, 0x9a, 0x02, 0x36, 0x41, 0xfd, 0xc5, 0x6a, 0xf9, 0x0d, 0x3a, 0x15, 0x12,
	0xbf, 0xea, 0x2e, 0x59, 0x3f, 0xac, 0xb1, 0xaf, 0x3c, 0xa1, 0xd5, 0xb9, 0xdc, 0xf3, 0xe3, 0xff,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xbd, 0xa1, 0xd6, 0xf8, 0xa8, 0x02, 0x00, 0x00,
}
