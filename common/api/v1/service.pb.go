// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service.proto

package v1

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type AliasType int32

const (
	AliasType_DEFAULT AliasType = 0
	AliasType_CL5SID  AliasType = 1
)

var AliasType_name = map[int32]string{
	0: "DEFAULT",
	1: "CL5SID",
}
var AliasType_value = map[string]int32{
	"DEFAULT": 0,
	"CL5SID":  1,
}

func (x AliasType) String() string {
	return proto.EnumName(AliasType_name, int32(x))
}
func (AliasType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{0}
}

type HealthCheck_HealthCheckType int32

const (
	HealthCheck_UNKNOWN   HealthCheck_HealthCheckType = 0
	HealthCheck_HEARTBEAT HealthCheck_HealthCheckType = 1
	HealthCheck_HTTP      HealthCheck_HealthCheckType = 2
	HealthCheck_GRPC      HealthCheck_HealthCheckType = 3
	HealthCheck_TCP       HealthCheck_HealthCheckType = 4
	HealthCheck_UDP       HealthCheck_HealthCheckType = 5
)

var HealthCheck_HealthCheckType_name = map[int32]string{
	0: "UNKNOWN",
	1: "HEARTBEAT",
	2: "HTTP",
	3: "GRPC",
	4: "TCP",
	5: "UDP",
}
var HealthCheck_HealthCheckType_value = map[string]int32{
	"UNKNOWN":   0,
	"HEARTBEAT": 1,
	"HTTP":      2,
	"GRPC":      3,
	"TCP":       4,
	"UDP":       5,
}

func (x HealthCheck_HealthCheckType) String() string {
	return proto.EnumName(HealthCheck_HealthCheckType_name, int32(x))
}
func (HealthCheck_HealthCheckType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{4, 0}
}

type Namespace struct {
	Name                     *wrappers.StringValue   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Comment                  *wrappers.StringValue   `protobuf:"bytes,2,opt,name=comment,proto3" json:"comment,omitempty"`
	Owners                   *wrappers.StringValue   `protobuf:"bytes,3,opt,name=owners,proto3" json:"owners,omitempty"`
	Token                    *wrappers.StringValue   `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`
	Ctime                    *wrappers.StringValue   `protobuf:"bytes,5,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime                    *wrappers.StringValue   `protobuf:"bytes,6,opt,name=mtime,proto3" json:"mtime,omitempty"`
	TotalServiceCount        *wrappers.UInt32Value   `protobuf:"bytes,7,opt,name=total_service_count,proto3" json:"total_service_count,omitempty"`
	TotalHealthInstanceCount *wrappers.UInt32Value   `protobuf:"bytes,8,opt,name=total_health_instance_count,proto3" json:"total_health_instance_count,omitempty"`
	TotalInstanceCount       *wrappers.UInt32Value   `protobuf:"bytes,9,opt,name=total_instance_count,proto3" json:"total_instance_count,omitempty"`
	UserIds                  []*wrappers.StringValue `protobuf:"bytes,10,rep,name=user_ids,proto3" json:"user_ids,omitempty"`
	GroupIds                 []*wrappers.StringValue `protobuf:"bytes,11,rep,name=group_ids,proto3" json:"group_ids,omitempty"`
	RemoveUserIds            []*wrappers.StringValue `protobuf:"bytes,13,rep,name=remove_user_ids,proto3" json:"remove_user_ids,omitempty"`
	RemoveGroupIds           []*wrappers.StringValue `protobuf:"bytes,14,rep,name=remove_group_ids,proto3" json:"remove_group_ids,omitempty"`
	Id                       *wrappers.StringValue   `protobuf:"bytes,12,opt,name=id,proto3" json:"id,omitempty"`
	Editable                 *wrappers.BoolValue     `protobuf:"bytes,15,opt,name=editable,proto3" json:"editable,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                `json:"-"`
	XXX_unrecognized         []byte                  `json:"-"`
	XXX_sizecache            int32                   `json:"-"`
}

func (m *Namespace) Reset()         { *m = Namespace{} }
func (m *Namespace) String() string { return proto.CompactTextString(m) }
func (*Namespace) ProtoMessage()    {}
func (*Namespace) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{0}
}
func (m *Namespace) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Namespace.Unmarshal(m, b)
}
func (m *Namespace) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Namespace.Marshal(b, m, deterministic)
}
func (dst *Namespace) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Namespace.Merge(dst, src)
}
func (m *Namespace) XXX_Size() int {
	return xxx_messageInfo_Namespace.Size(m)
}
func (m *Namespace) XXX_DiscardUnknown() {
	xxx_messageInfo_Namespace.DiscardUnknown(m)
}

var xxx_messageInfo_Namespace proto.InternalMessageInfo

func (m *Namespace) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Namespace) GetComment() *wrappers.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Namespace) GetOwners() *wrappers.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *Namespace) GetToken() *wrappers.StringValue {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Namespace) GetCtime() *wrappers.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Namespace) GetMtime() *wrappers.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

func (m *Namespace) GetTotalServiceCount() *wrappers.UInt32Value {
	if m != nil {
		return m.TotalServiceCount
	}
	return nil
}

func (m *Namespace) GetTotalHealthInstanceCount() *wrappers.UInt32Value {
	if m != nil {
		return m.TotalHealthInstanceCount
	}
	return nil
}

func (m *Namespace) GetTotalInstanceCount() *wrappers.UInt32Value {
	if m != nil {
		return m.TotalInstanceCount
	}
	return nil
}

func (m *Namespace) GetUserIds() []*wrappers.StringValue {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *Namespace) GetGroupIds() []*wrappers.StringValue {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *Namespace) GetRemoveUserIds() []*wrappers.StringValue {
	if m != nil {
		return m.RemoveUserIds
	}
	return nil
}

func (m *Namespace) GetRemoveGroupIds() []*wrappers.StringValue {
	if m != nil {
		return m.RemoveGroupIds
	}
	return nil
}

func (m *Namespace) GetId() *wrappers.StringValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Namespace) GetEditable() *wrappers.BoolValue {
	if m != nil {
		return m.Editable
	}
	return nil
}

type Service struct {
	Name                 *wrappers.StringValue   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Namespace            *wrappers.StringValue   `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Metadata             map[string]string       `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Ports                *wrappers.StringValue   `protobuf:"bytes,4,opt,name=ports,proto3" json:"ports,omitempty"`
	Business             *wrappers.StringValue   `protobuf:"bytes,5,opt,name=business,proto3" json:"business,omitempty"`
	Department           *wrappers.StringValue   `protobuf:"bytes,6,opt,name=department,proto3" json:"department,omitempty"`
	CmdbMod1             *wrappers.StringValue   `protobuf:"bytes,7,opt,name=cmdb_mod1,proto3" json:"cmdb_mod1,omitempty"`
	CmdbMod2             *wrappers.StringValue   `protobuf:"bytes,8,opt,name=cmdb_mod2,proto3" json:"cmdb_mod2,omitempty"`
	CmdbMod3             *wrappers.StringValue   `protobuf:"bytes,9,opt,name=cmdb_mod3,proto3" json:"cmdb_mod3,omitempty"`
	Comment              *wrappers.StringValue   `protobuf:"bytes,10,opt,name=comment,proto3" json:"comment,omitempty"`
	Owners               *wrappers.StringValue   `protobuf:"bytes,11,opt,name=owners,proto3" json:"owners,omitempty"`
	Token                *wrappers.StringValue   `protobuf:"bytes,12,opt,name=token,proto3" json:"token,omitempty"`
	Ctime                *wrappers.StringValue   `protobuf:"bytes,13,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime                *wrappers.StringValue   `protobuf:"bytes,14,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Revision             *wrappers.StringValue   `protobuf:"bytes,15,opt,name=revision,proto3" json:"revision,omitempty"`
	PlatformId           *wrappers.StringValue   `protobuf:"bytes,16,opt,name=platform_id,proto3" json:"platform_id,omitempty"`
	TotalInstanceCount   *wrappers.UInt32Value   `protobuf:"bytes,17,opt,name=total_instance_count,proto3" json:"total_instance_count,omitempty"`
	HealthyInstanceCount *wrappers.UInt32Value   `protobuf:"bytes,18,opt,name=healthy_instance_count,proto3" json:"healthy_instance_count,omitempty"`
	UserIds              []*wrappers.StringValue `protobuf:"bytes,19,rep,name=user_ids,proto3" json:"user_ids,omitempty"`
	GroupIds             []*wrappers.StringValue `protobuf:"bytes,20,rep,name=group_ids,proto3" json:"group_ids,omitempty"`
	RemoveUserIds        []*wrappers.StringValue `protobuf:"bytes,22,rep,name=remove_user_ids,proto3" json:"remove_user_ids,omitempty"`
	RemoveGroupIds       []*wrappers.StringValue `protobuf:"bytes,23,rep,name=remove_group_ids,proto3" json:"remove_group_ids,omitempty"`
	Id                   *wrappers.StringValue   `protobuf:"bytes,21,opt,name=id,proto3" json:"id,omitempty"`
	Editable             *wrappers.BoolValue     `protobuf:"bytes,24,opt,name=editable,proto3" json:"editable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{1}
}
func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (dst *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(dst, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() *wrappers.StringValue {
	if m != nil {
		return m.Name
	}
	return nil
}

func (m *Service) GetNamespace() *wrappers.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Service) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Service) GetPorts() *wrappers.StringValue {
	if m != nil {
		return m.Ports
	}
	return nil
}

func (m *Service) GetBusiness() *wrappers.StringValue {
	if m != nil {
		return m.Business
	}
	return nil
}

func (m *Service) GetDepartment() *wrappers.StringValue {
	if m != nil {
		return m.Department
	}
	return nil
}

func (m *Service) GetCmdbMod1() *wrappers.StringValue {
	if m != nil {
		return m.CmdbMod1
	}
	return nil
}

func (m *Service) GetCmdbMod2() *wrappers.StringValue {
	if m != nil {
		return m.CmdbMod2
	}
	return nil
}

func (m *Service) GetCmdbMod3() *wrappers.StringValue {
	if m != nil {
		return m.CmdbMod3
	}
	return nil
}

func (m *Service) GetComment() *wrappers.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *Service) GetOwners() *wrappers.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *Service) GetToken() *wrappers.StringValue {
	if m != nil {
		return m.Token
	}
	return nil
}

func (m *Service) GetCtime() *wrappers.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Service) GetMtime() *wrappers.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

func (m *Service) GetRevision() *wrappers.StringValue {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *Service) GetPlatformId() *wrappers.StringValue {
	if m != nil {
		return m.PlatformId
	}
	return nil
}

func (m *Service) GetTotalInstanceCount() *wrappers.UInt32Value {
	if m != nil {
		return m.TotalInstanceCount
	}
	return nil
}

func (m *Service) GetHealthyInstanceCount() *wrappers.UInt32Value {
	if m != nil {
		return m.HealthyInstanceCount
	}
	return nil
}

func (m *Service) GetUserIds() []*wrappers.StringValue {
	if m != nil {
		return m.UserIds
	}
	return nil
}

func (m *Service) GetGroupIds() []*wrappers.StringValue {
	if m != nil {
		return m.GroupIds
	}
	return nil
}

func (m *Service) GetRemoveUserIds() []*wrappers.StringValue {
	if m != nil {
		return m.RemoveUserIds
	}
	return nil
}

func (m *Service) GetRemoveGroupIds() []*wrappers.StringValue {
	if m != nil {
		return m.RemoveGroupIds
	}
	return nil
}

func (m *Service) GetId() *wrappers.StringValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Service) GetEditable() *wrappers.BoolValue {
	if m != nil {
		return m.Editable
	}
	return nil
}

type ServiceAlias struct {
	Service              *wrappers.StringValue `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Namespace            *wrappers.StringValue `protobuf:"bytes,2,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Alias                *wrappers.StringValue `protobuf:"bytes,3,opt,name=alias,proto3" json:"alias,omitempty"`
	AliasNamespace       *wrappers.StringValue `protobuf:"bytes,4,opt,name=alias_namespace,proto3" json:"alias_namespace,omitempty"`
	Type                 AliasType             `protobuf:"varint,5,opt,name=type,proto3,enum=v1.AliasType" json:"type,omitempty"`
	Owners               *wrappers.StringValue `protobuf:"bytes,6,opt,name=owners,proto3" json:"owners,omitempty"`
	Comment              *wrappers.StringValue `protobuf:"bytes,7,opt,name=comment,proto3" json:"comment,omitempty"`
	ServiceToken         *wrappers.StringValue `protobuf:"bytes,8,opt,name=service_token,proto3" json:"service_token,omitempty"`
	Ctime                *wrappers.StringValue `protobuf:"bytes,9,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime                *wrappers.StringValue `protobuf:"bytes,10,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Id                   *wrappers.StringValue `protobuf:"bytes,11,opt,name=id,proto3" json:"id,omitempty"`
	Editable             *wrappers.BoolValue   `protobuf:"bytes,12,opt,name=editable,proto3" json:"editable,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *ServiceAlias) Reset()         { *m = ServiceAlias{} }
func (m *ServiceAlias) String() string { return proto.CompactTextString(m) }
func (*ServiceAlias) ProtoMessage()    {}
func (*ServiceAlias) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{2}
}
func (m *ServiceAlias) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ServiceAlias.Unmarshal(m, b)
}
func (m *ServiceAlias) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ServiceAlias.Marshal(b, m, deterministic)
}
func (dst *ServiceAlias) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ServiceAlias.Merge(dst, src)
}
func (m *ServiceAlias) XXX_Size() int {
	return xxx_messageInfo_ServiceAlias.Size(m)
}
func (m *ServiceAlias) XXX_DiscardUnknown() {
	xxx_messageInfo_ServiceAlias.DiscardUnknown(m)
}

var xxx_messageInfo_ServiceAlias proto.InternalMessageInfo

func (m *ServiceAlias) GetService() *wrappers.StringValue {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *ServiceAlias) GetNamespace() *wrappers.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *ServiceAlias) GetAlias() *wrappers.StringValue {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *ServiceAlias) GetAliasNamespace() *wrappers.StringValue {
	if m != nil {
		return m.AliasNamespace
	}
	return nil
}

func (m *ServiceAlias) GetType() AliasType {
	if m != nil {
		return m.Type
	}
	return AliasType_DEFAULT
}

func (m *ServiceAlias) GetOwners() *wrappers.StringValue {
	if m != nil {
		return m.Owners
	}
	return nil
}

func (m *ServiceAlias) GetComment() *wrappers.StringValue {
	if m != nil {
		return m.Comment
	}
	return nil
}

func (m *ServiceAlias) GetServiceToken() *wrappers.StringValue {
	if m != nil {
		return m.ServiceToken
	}
	return nil
}

func (m *ServiceAlias) GetCtime() *wrappers.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *ServiceAlias) GetMtime() *wrappers.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

func (m *ServiceAlias) GetId() *wrappers.StringValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ServiceAlias) GetEditable() *wrappers.BoolValue {
	if m != nil {
		return m.Editable
	}
	return nil
}

type Instance struct {
	Id                   *wrappers.StringValue `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Service              *wrappers.StringValue `protobuf:"bytes,2,opt,name=service,proto3" json:"service,omitempty"`
	Namespace            *wrappers.StringValue `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	VpcId                *wrappers.StringValue `protobuf:"bytes,21,opt,name=vpc_id,proto3" json:"vpc_id,omitempty"`
	Host                 *wrappers.StringValue `protobuf:"bytes,4,opt,name=host,proto3" json:"host,omitempty"`
	Port                 *wrappers.UInt32Value `protobuf:"bytes,5,opt,name=port,proto3" json:"port,omitempty"`
	Protocol             *wrappers.StringValue `protobuf:"bytes,6,opt,name=protocol,proto3" json:"protocol,omitempty"`
	Version              *wrappers.StringValue `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	Priority             *wrappers.UInt32Value `protobuf:"bytes,8,opt,name=priority,proto3" json:"priority,omitempty"`
	Weight               *wrappers.UInt32Value `protobuf:"bytes,9,opt,name=weight,proto3" json:"weight,omitempty"`
	EnableHealthCheck    *wrappers.BoolValue   `protobuf:"bytes,20,opt,name=enable_health_check,json=enableHealthCheck,proto3" json:"enable_health_check,omitempty"`
	HealthCheck          *HealthCheck          `protobuf:"bytes,10,opt,name=health_check,json=healthCheck,proto3" json:"health_check,omitempty"`
	Healthy              *wrappers.BoolValue   `protobuf:"bytes,11,opt,name=healthy,proto3" json:"healthy,omitempty"`
	Isolate              *wrappers.BoolValue   `protobuf:"bytes,12,opt,name=isolate,proto3" json:"isolate,omitempty"`
	Location             *Location             `protobuf:"bytes,13,opt,name=location,proto3" json:"location,omitempty"`
	Metadata             map[string]string     `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	LogicSet             *wrappers.StringValue `protobuf:"bytes,15,opt,name=logic_set,proto3" json:"logic_set,omitempty"`
	Ctime                *wrappers.StringValue `protobuf:"bytes,16,opt,name=ctime,proto3" json:"ctime,omitempty"`
	Mtime                *wrappers.StringValue `protobuf:"bytes,17,opt,name=mtime,proto3" json:"mtime,omitempty"`
	Revision             *wrappers.StringValue `protobuf:"bytes,18,opt,name=revision,proto3" json:"revision,omitempty"`
	ServiceToken         *wrappers.StringValue `protobuf:"bytes,19,opt,name=service_token,proto3" json:"service_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *Instance) Reset()         { *m = Instance{} }
func (m *Instance) String() string { return proto.CompactTextString(m) }
func (*Instance) ProtoMessage()    {}
func (*Instance) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{3}
}
func (m *Instance) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Instance.Unmarshal(m, b)
}
func (m *Instance) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Instance.Marshal(b, m, deterministic)
}
func (dst *Instance) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Instance.Merge(dst, src)
}
func (m *Instance) XXX_Size() int {
	return xxx_messageInfo_Instance.Size(m)
}
func (m *Instance) XXX_DiscardUnknown() {
	xxx_messageInfo_Instance.DiscardUnknown(m)
}

var xxx_messageInfo_Instance proto.InternalMessageInfo

func (m *Instance) GetId() *wrappers.StringValue {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *Instance) GetService() *wrappers.StringValue {
	if m != nil {
		return m.Service
	}
	return nil
}

func (m *Instance) GetNamespace() *wrappers.StringValue {
	if m != nil {
		return m.Namespace
	}
	return nil
}

func (m *Instance) GetVpcId() *wrappers.StringValue {
	if m != nil {
		return m.VpcId
	}
	return nil
}

func (m *Instance) GetHost() *wrappers.StringValue {
	if m != nil {
		return m.Host
	}
	return nil
}

func (m *Instance) GetPort() *wrappers.UInt32Value {
	if m != nil {
		return m.Port
	}
	return nil
}

func (m *Instance) GetProtocol() *wrappers.StringValue {
	if m != nil {
		return m.Protocol
	}
	return nil
}

func (m *Instance) GetVersion() *wrappers.StringValue {
	if m != nil {
		return m.Version
	}
	return nil
}

func (m *Instance) GetPriority() *wrappers.UInt32Value {
	if m != nil {
		return m.Priority
	}
	return nil
}

func (m *Instance) GetWeight() *wrappers.UInt32Value {
	if m != nil {
		return m.Weight
	}
	return nil
}

func (m *Instance) GetEnableHealthCheck() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHealthCheck
	}
	return nil
}

func (m *Instance) GetHealthCheck() *HealthCheck {
	if m != nil {
		return m.HealthCheck
	}
	return nil
}

func (m *Instance) GetHealthy() *wrappers.BoolValue {
	if m != nil {
		return m.Healthy
	}
	return nil
}

func (m *Instance) GetIsolate() *wrappers.BoolValue {
	if m != nil {
		return m.Isolate
	}
	return nil
}

func (m *Instance) GetLocation() *Location {
	if m != nil {
		return m.Location
	}
	return nil
}

func (m *Instance) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Instance) GetLogicSet() *wrappers.StringValue {
	if m != nil {
		return m.LogicSet
	}
	return nil
}

func (m *Instance) GetCtime() *wrappers.StringValue {
	if m != nil {
		return m.Ctime
	}
	return nil
}

func (m *Instance) GetMtime() *wrappers.StringValue {
	if m != nil {
		return m.Mtime
	}
	return nil
}

func (m *Instance) GetRevision() *wrappers.StringValue {
	if m != nil {
		return m.Revision
	}
	return nil
}

func (m *Instance) GetServiceToken() *wrappers.StringValue {
	if m != nil {
		return m.ServiceToken
	}
	return nil
}

type HealthCheck struct {
	Type                 HealthCheck_HealthCheckType `protobuf:"varint,1,opt,name=type,proto3,enum=v1.HealthCheck_HealthCheckType" json:"type,omitempty"`
	Heartbeat            *HeartbeatHealthCheck       `protobuf:"bytes,2,opt,name=heartbeat,proto3" json:"heartbeat,omitempty"`
	Http                 *HTTPDetector               `protobuf:"bytes,3,opt,name=http,proto3" json:"http,omitempty"`
	Grpc                 *GRPCDetector               `protobuf:"bytes,4,opt,name=grpc,proto3" json:"grpc,omitempty"`
	Tcp                  *TCPDetector                `protobuf:"bytes,5,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Udp                  *UDPDetector                `protobuf:"bytes,6,opt,name=udp,proto3" json:"udp,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *HealthCheck) Reset()         { *m = HealthCheck{} }
func (m *HealthCheck) String() string { return proto.CompactTextString(m) }
func (*HealthCheck) ProtoMessage()    {}
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{4}
}
func (m *HealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheck.Unmarshal(m, b)
}
func (m *HealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheck.Marshal(b, m, deterministic)
}
func (dst *HealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheck.Merge(dst, src)
}
func (m *HealthCheck) XXX_Size() int {
	return xxx_messageInfo_HealthCheck.Size(m)
}
func (m *HealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheck proto.InternalMessageInfo

func (m *HealthCheck) GetType() HealthCheck_HealthCheckType {
	if m != nil {
		return m.Type
	}
	return HealthCheck_UNKNOWN
}

func (m *HealthCheck) GetHeartbeat() *HeartbeatHealthCheck {
	if m != nil {
		return m.Heartbeat
	}
	return nil
}

func (m *HealthCheck) GetHttp() *HTTPDetector {
	if m != nil {
		return m.Http
	}
	return nil
}

func (m *HealthCheck) GetGrpc() *GRPCDetector {
	if m != nil {
		return m.Grpc
	}
	return nil
}

func (m *HealthCheck) GetTcp() *TCPDetector {
	if m != nil {
		return m.Tcp
	}
	return nil
}

func (m *HealthCheck) GetUdp() *UDPDetector {
	if m != nil {
		return m.Udp
	}
	return nil
}

type HeartbeatHealthCheck struct {
	Ttl                  *wrappers.UInt32Value `protobuf:"bytes,1,opt,name=ttl,proto3" json:"ttl,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HeartbeatHealthCheck) Reset()         { *m = HeartbeatHealthCheck{} }
func (m *HeartbeatHealthCheck) String() string { return proto.CompactTextString(m) }
func (*HeartbeatHealthCheck) ProtoMessage()    {}
func (*HeartbeatHealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{5}
}
func (m *HeartbeatHealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatHealthCheck.Unmarshal(m, b)
}
func (m *HeartbeatHealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatHealthCheck.Marshal(b, m, deterministic)
}
func (dst *HeartbeatHealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatHealthCheck.Merge(dst, src)
}
func (m *HeartbeatHealthCheck) XXX_Size() int {
	return xxx_messageInfo_HeartbeatHealthCheck.Size(m)
}
func (m *HeartbeatHealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatHealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatHealthCheck proto.InternalMessageInfo

func (m *HeartbeatHealthCheck) GetTtl() *wrappers.UInt32Value {
	if m != nil {
		return m.Ttl
	}
	return nil
}

// http check config
type HTTPDetector struct {
	Method               string            `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Path                 string            `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Host                 string            `protobuf:"bytes,3,opt,name=host,proto3" json:"host,omitempty"`
	Port                 uint32            `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	HeadersToAdd         map[string]string `protobuf:"bytes,5,rep,name=headersToAdd,proto3" json:"headersToAdd,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *HTTPDetector) Reset()         { *m = HTTPDetector{} }
func (m *HTTPDetector) String() string { return proto.CompactTextString(m) }
func (*HTTPDetector) ProtoMessage()    {}
func (*HTTPDetector) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{6}
}
func (m *HTTPDetector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HTTPDetector.Unmarshal(m, b)
}
func (m *HTTPDetector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HTTPDetector.Marshal(b, m, deterministic)
}
func (dst *HTTPDetector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HTTPDetector.Merge(dst, src)
}
func (m *HTTPDetector) XXX_Size() int {
	return xxx_messageInfo_HTTPDetector.Size(m)
}
func (m *HTTPDetector) XXX_DiscardUnknown() {
	xxx_messageInfo_HTTPDetector.DiscardUnknown(m)
}

var xxx_messageInfo_HTTPDetector proto.InternalMessageInfo

func (m *HTTPDetector) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *HTTPDetector) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *HTTPDetector) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *HTTPDetector) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HTTPDetector) GetHeadersToAdd() map[string]string {
	if m != nil {
		return m.HeadersToAdd
	}
	return nil
}

// grpc check config, the application should implement the
// HealthCheckService(https://github.com/grpc/grpc/blob/master/doc/health-checking.md)
type GRPCDetector struct {
	Host                 string   `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port                 uint32   `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GRPCDetector) Reset()         { *m = GRPCDetector{} }
func (m *GRPCDetector) String() string { return proto.CompactTextString(m) }
func (*GRPCDetector) ProtoMessage()    {}
func (*GRPCDetector) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{7}
}
func (m *GRPCDetector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GRPCDetector.Unmarshal(m, b)
}
func (m *GRPCDetector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GRPCDetector.Marshal(b, m, deterministic)
}
func (dst *GRPCDetector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GRPCDetector.Merge(dst, src)
}
func (m *GRPCDetector) XXX_Size() int {
	return xxx_messageInfo_GRPCDetector.Size(m)
}
func (m *GRPCDetector) XXX_DiscardUnknown() {
	xxx_messageInfo_GRPCDetector.DiscardUnknown(m)
}

var xxx_messageInfo_GRPCDetector proto.InternalMessageInfo

func (m *GRPCDetector) GetHost() string {
	if m != nil {
		return m.Host
	}
	return ""
}

func (m *GRPCDetector) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// tcp check config, use the choose the check by connect or by send and receive
// data
type TCPDetector struct {
	Port                 uint32   `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	ConnectCheck         bool     `protobuf:"varint,2,opt,name=connect_check,json=connectCheck,proto3" json:"connect_check,omitempty"`
	Send                 string   `protobuf:"bytes,3,opt,name=send,proto3" json:"send,omitempty"`
	Receive              []string `protobuf:"bytes,4,rep,name=receive,proto3" json:"receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TCPDetector) Reset()         { *m = TCPDetector{} }
func (m *TCPDetector) String() string { return proto.CompactTextString(m) }
func (*TCPDetector) ProtoMessage()    {}
func (*TCPDetector) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{8}
}
func (m *TCPDetector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TCPDetector.Unmarshal(m, b)
}
func (m *TCPDetector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TCPDetector.Marshal(b, m, deterministic)
}
func (dst *TCPDetector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TCPDetector.Merge(dst, src)
}
func (m *TCPDetector) XXX_Size() int {
	return xxx_messageInfo_TCPDetector.Size(m)
}
func (m *TCPDetector) XXX_DiscardUnknown() {
	xxx_messageInfo_TCPDetector.DiscardUnknown(m)
}

var xxx_messageInfo_TCPDetector proto.InternalMessageInfo

func (m *TCPDetector) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *TCPDetector) GetConnectCheck() bool {
	if m != nil {
		return m.ConnectCheck
	}
	return false
}

func (m *TCPDetector) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *TCPDetector) GetReceive() []string {
	if m != nil {
		return m.Receive
	}
	return nil
}

// udp check config, only support send and receive data check
type UDPDetector struct {
	Port                 uint32   `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	Send                 string   `protobuf:"bytes,2,opt,name=send,proto3" json:"send,omitempty"`
	Receive              []string `protobuf:"bytes,3,rep,name=receive,proto3" json:"receive,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UDPDetector) Reset()         { *m = UDPDetector{} }
func (m *UDPDetector) String() string { return proto.CompactTextString(m) }
func (*UDPDetector) ProtoMessage()    {}
func (*UDPDetector) Descriptor() ([]byte, []int) {
	return fileDescriptor_service_3c823c297d6720ed, []int{9}
}
func (m *UDPDetector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UDPDetector.Unmarshal(m, b)
}
func (m *UDPDetector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UDPDetector.Marshal(b, m, deterministic)
}
func (dst *UDPDetector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UDPDetector.Merge(dst, src)
}
func (m *UDPDetector) XXX_Size() int {
	return xxx_messageInfo_UDPDetector.Size(m)
}
func (m *UDPDetector) XXX_DiscardUnknown() {
	xxx_messageInfo_UDPDetector.DiscardUnknown(m)
}

var xxx_messageInfo_UDPDetector proto.InternalMessageInfo

func (m *UDPDetector) GetPort() uint32 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *UDPDetector) GetSend() string {
	if m != nil {
		return m.Send
	}
	return ""
}

func (m *UDPDetector) GetReceive() []string {
	if m != nil {
		return m.Receive
	}
	return nil
}

func init() {
	proto.RegisterType((*Namespace)(nil), "v1.Namespace")
	proto.RegisterType((*Service)(nil), "v1.Service")
	proto.RegisterMapType((map[string]string)(nil), "v1.Service.MetadataEntry")
	proto.RegisterType((*ServiceAlias)(nil), "v1.ServiceAlias")
	proto.RegisterType((*Instance)(nil), "v1.Instance")
	proto.RegisterMapType((map[string]string)(nil), "v1.Instance.MetadataEntry")
	proto.RegisterType((*HealthCheck)(nil), "v1.HealthCheck")
	proto.RegisterType((*HeartbeatHealthCheck)(nil), "v1.HeartbeatHealthCheck")
	proto.RegisterType((*HTTPDetector)(nil), "v1.HTTPDetector")
	proto.RegisterMapType((map[string]string)(nil), "v1.HTTPDetector.HeadersToAddEntry")
	proto.RegisterType((*GRPCDetector)(nil), "v1.GRPCDetector")
	proto.RegisterType((*TCPDetector)(nil), "v1.TCPDetector")
	proto.RegisterType((*UDPDetector)(nil), "v1.UDPDetector")
	proto.RegisterEnum("v1.AliasType", AliasType_name, AliasType_value)
	proto.RegisterEnum("v1.HealthCheck_HealthCheckType", HealthCheck_HealthCheckType_name, HealthCheck_HealthCheckType_value)
}

func init() { proto.RegisterFile("service.proto", fileDescriptor_service_3c823c297d6720ed) }

var fileDescriptor_service_3c823c297d6720ed = []byte{
	// 1337 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x98, 0xdd, 0x72, 0xdb, 0x44,
	0x14, 0xc7, 0x6b, 0xcb, 0x5f, 0x3a, 0xb2, 0x1b, 0x65, 0x13, 0x8a, 0x30, 0x0c, 0xb4, 0xa6, 0x17,
	0x1d, 0x86, 0x71, 0xa9, 0xd3, 0x66, 0x3a, 0x81, 0x81, 0x49, 0xf3, 0x41, 0x0b, 0x25, 0xcd, 0x28,
	0x0e, 0xdc, 0xe1, 0x91, 0xa5, 0xad, 0xad, 0x89, 0xa4, 0xd5, 0x48, 0x6b, 0x67, 0xfc, 0x38, 0x3c,
	0x05, 0x4f, 0xc2, 0x03, 0x70, 0xc1, 0x15, 0x2f, 0xc1, 0xec, 0x6a, 0x25, 0xcb, 0x8e, 0xdd, 0xac,
	0x15, 0xee, 0x64, 0xed, 0xff, 0x7f, 0x56, 0xda, 0x3d, 0xe7, 0xb7, 0x47, 0x86, 0x56, 0x8c, 0xa3,
	0xa9, 0x6b, 0xe3, 0x6e, 0x18, 0x11, 0x4a, 0x50, 0x79, 0xfa, 0xac, 0xfd, 0xf9, 0x88, 0x90, 0x91,
	0x87, 0x9f, 0xf2, 0x3b, 0xc3, 0xc9, 0xfb, 0xa7, 0xd7, 0x91, 0x15, 0x86, 0x38, 0x8a, 0x13, 0x4d,
	0x5b, 0xf3, 0x89, 0x83, 0xbd, 0xe4, 0x47, 0xe7, 0xcf, 0x3a, 0xa8, 0x67, 0x96, 0x8f, 0xe3, 0xd0,
	0xb2, 0x31, 0xfa, 0x06, 0x2a, 0x81, 0xe5, 0x63, 0xa3, 0xf4, 0xb0, 0xf4, 0x44, 0xeb, 0x7d, 0xd6,
	0x4d, 0x22, 0x75, 0xd3, 0x48, 0xdd, 0x0b, 0x1a, 0xb9, 0xc1, 0xe8, 0x57, 0xcb, 0x9b, 0x60, 0x93,
	0x2b, 0xd1, 0x3e, 0xd4, 0x6d, 0xe2, 0xfb, 0x38, 0xa0, 0x46, 0x59, 0xc2, 0x94, 0x8a, 0xd1, 0x73,
	0xa8, 0x91, 0xeb, 0x00, 0x47, 0xb1, 0xa1, 0x48, 0xd8, 0x84, 0x16, 0xf5, 0xa0, 0x4a, 0xc9, 0x15,
	0x0e, 0x8c, 0x8a, 0x84, 0x29, 0x91, 0x32, 0x8f, 0x4d, 0x5d, 0x1f, 0x1b, 0x55, 0x19, 0x0f, 0x97,
	0x32, 0x8f, 0xcf, 0x3d, 0x35, 0x19, 0x0f, 0x97, 0xa2, 0x33, 0xd8, 0xa1, 0x84, 0x5a, 0xde, 0x40,
	0xec, 0xc8, 0xc0, 0x26, 0x93, 0x80, 0x1a, 0xf5, 0x35, 0x11, 0x2e, 0xdf, 0x04, 0x74, 0xaf, 0x97,
	0x44, 0x58, 0x65, 0x44, 0xbf, 0xc3, 0xa7, 0xc9, 0xed, 0x31, 0xb6, 0x3c, 0x3a, 0x1e, 0xb8, 0x41,
	0x4c, 0xad, 0x20, 0x8b, 0xdb, 0x90, 0x88, 0xfb, 0xa1, 0x00, 0xe8, 0x1c, 0x76, 0x93, 0xe1, 0xa5,
	0xc0, 0xaa, 0x44, 0xe0, 0x95, 0x4e, 0xf4, 0x12, 0x1a, 0x93, 0x18, 0x47, 0x03, 0xd7, 0x89, 0x0d,
	0x78, 0xa8, 0xdc, 0xba, 0x70, 0x99, 0x1a, 0x1d, 0x80, 0x3a, 0x8a, 0xc8, 0x24, 0xe4, 0x56, 0x4d,
	0xc2, 0x3a, 0x97, 0xa3, 0x53, 0xd8, 0x8a, 0xb0, 0x4f, 0xa6, 0x78, 0x90, 0x4d, 0xde, 0x92, 0x88,
	0xb0, 0x6c, 0x42, 0xaf, 0x41, 0x17, 0xb7, 0xe6, 0x8f, 0x72, 0x5f, 0x22, 0xd0, 0x0d, 0x17, 0xfa,
	0x1a, 0xca, 0xae, 0x63, 0x34, 0x25, 0x52, 0xa7, 0xec, 0x3a, 0x68, 0x1f, 0x1a, 0xd8, 0x71, 0xa9,
	0x35, 0xf4, 0xb0, 0xb1, 0xc5, 0x3d, 0xed, 0x1b, 0x9e, 0x57, 0x84, 0x78, 0x62, 0xcd, 0x52, 0x6d,
	0xe7, 0x1f, 0x0d, 0xea, 0x17, 0x49, 0xc6, 0x14, 0xa8, 0xdb, 0x03, 0x50, 0x83, 0xb4, 0xec, 0xa5,
	0x2a, 0x77, 0x2e, 0x47, 0x2f, 0xa0, 0xe1, 0x63, 0x6a, 0x39, 0x16, 0xb5, 0x0c, 0x85, 0xaf, 0xd0,
	0x27, 0xdd, 0xe9, 0xb3, 0xae, 0x78, 0x98, 0xee, 0x2f, 0x62, 0xec, 0x24, 0xa0, 0xd1, 0xcc, 0xcc,
	0xa4, 0xac, 0xa8, 0x42, 0x12, 0xd1, 0x58, 0xae, 0x78, 0xb9, 0x94, 0xa5, 0xd4, 0x70, 0x12, 0xbb,
	0x01, 0x8e, 0x63, 0xa9, 0xfa, 0xcd, 0xd4, 0xe8, 0x3b, 0x00, 0x07, 0x87, 0x56, 0x44, 0x39, 0x9b,
	0x64, 0xea, 0x38, 0xa7, 0x67, 0xcb, 0x63, 0xfb, 0xce, 0x70, 0xe0, 0x13, 0xe7, 0xd9, 0xda, 0x12,
	0x5e, 0x58, 0x9e, 0x4c, 0x9e, 0xf7, 0xf6, 0xd6, 0x96, 0xe9, 0x4a, 0x6f, 0x2f, 0xef, 0xdd, 0x5b,
	0x5b, 0x89, 0x2b, 0xbd, 0x7b, 0x79, 0x14, 0x43, 0x31, 0x14, 0x6b, 0x45, 0x50, 0xdc, 0x2c, 0x80,
	0xe2, 0x56, 0x01, 0x14, 0xdf, 0x97, 0x47, 0xf1, 0x4b, 0x68, 0x44, 0x78, 0xea, 0xc6, 0x2e, 0x09,
	0x44, 0x49, 0xdd, 0x92, 0x35, 0xa9, 0x1a, 0x7d, 0x0f, 0x5a, 0xe8, 0x59, 0xf4, 0x3d, 0x89, 0xfc,
	0x81, 0xeb, 0x18, 0xba, 0x84, 0x39, 0x6f, 0x58, 0x0b, 0xd5, 0xed, 0xc2, 0x50, 0xed, 0xc3, 0x83,
	0x84, 0xdf, 0xb3, 0xe5, 0x98, 0x48, 0x22, 0xe6, 0x1a, 0xef, 0x02, 0xaa, 0x77, 0x8a, 0xa3, 0x7a,
	0xf7, 0xce, 0xa8, 0x7e, 0xf0, 0x7f, 0xa1, 0xfa, 0xe3, 0x3b, 0xa0, 0xfa, 0xa3, 0x02, 0xa8, 0x36,
	0xe4, 0x51, 0xdd, 0xfe, 0x16, 0x5a, 0x0b, 0x50, 0x44, 0x3a, 0x28, 0x57, 0x78, 0xc6, 0x71, 0xad,
	0x9a, 0xec, 0x12, 0xed, 0x42, 0x75, 0xca, 0x5c, 0x9c, 0xc5, 0xaa, 0x99, 0xfc, 0x38, 0x28, 0xbf,
	0x2c, 0x75, 0xfe, 0xa8, 0x42, 0x53, 0xa0, 0xf5, 0xd0, 0x73, 0xad, 0x98, 0xd5, 0xb9, 0xe8, 0x14,
	0xa4, 0x78, 0x9f, 0x8a, 0xef, 0x84, 0xfc, 0x1e, 0x54, 0x2d, 0x36, 0xb9, 0x54, 0xb7, 0x96, 0x48,
	0xd9, 0x6e, 0xf3, 0x8b, 0xc1, 0x7c, 0x56, 0x19, 0xf2, 0x2f, 0x9b, 0xd0, 0x23, 0xa8, 0xd0, 0x59,
	0x98, 0xf4, 0x6f, 0xf7, 0x7b, 0x2d, 0x76, 0xd4, 0xf0, 0x85, 0xe8, 0xcf, 0x42, 0x6c, 0xf2, 0xa1,
	0x1c, 0xc2, 0x6a, 0x1b, 0x20, 0x2c, 0x07, 0xcc, 0xfa, 0x26, 0xc0, 0x7c, 0x95, 0x75, 0xdd, 0x83,
	0x04, 0x81, 0x32, 0x90, 0x5f, 0xb4, 0xcc, 0x51, 0xa8, 0x16, 0x40, 0x21, 0xc8, 0xa3, 0x30, 0x49,
	0x70, 0xad, 0x40, 0x82, 0x37, 0x37, 0xe8, 0x45, 0xfe, 0x52, 0xa1, 0xf1, 0x46, 0x10, 0x46, 0x4c,
	0x59, 0x92, 0x9e, 0x32, 0xcb, 0xe6, 0x72, 0xe1, 0x6c, 0x56, 0x36, 0xcb, 0xe6, 0xe7, 0x50, 0x9b,
	0x86, 0xf6, 0x40, 0xb2, 0xf2, 0x85, 0x96, 0x35, 0x59, 0x63, 0x12, 0x53, 0xa9, 0x24, 0xe6, 0x4a,
	0xe6, 0x60, 0x6d, 0xcc, 0xda, 0xce, 0x25, 0x4f, 0x6a, 0xae, 0x64, 0x5c, 0xe6, 0xa3, 0x36, 0xf1,
	0xa4, 0x52, 0x39, 0x53, 0xb3, 0x75, 0x9c, 0xe2, 0x88, 0x1f, 0x79, 0x52, 0xc9, 0x2c, 0xc4, 0xc9,
	0x8c, 0x2e, 0x89, 0x5c, 0x3a, 0x93, 0xfa, 0xa6, 0xc8, 0xd4, 0x6c, 0x15, 0xaf, 0xb1, 0x3b, 0x1a,
	0xcb, 0x7d, 0x32, 0x08, 0x2d, 0xfa, 0x09, 0x76, 0x70, 0xc0, 0x92, 0x26, 0xfd, 0x2c, 0xb1, 0xc7,
	0xd8, 0xbe, 0x32, 0x76, 0x6f, 0xcd, 0xb6, 0xed, 0xc4, 0xf6, 0x9a, 0xbb, 0x8e, 0x98, 0x09, 0xf5,
	0xa0, 0xb9, 0x10, 0x24, 0xa9, 0x8b, 0x2d, 0x46, 0x88, 0x9c, 0xcc, 0xd4, 0xc6, 0x39, 0xcf, 0x73,
	0xa8, 0x8b, 0x33, 0x51, 0x54, 0xc5, 0x87, 0xe6, 0x4c, 0xa5, 0xcc, 0xe5, 0xc6, 0xc4, 0xb3, 0xa8,
	0x4c, 0x5d, 0xa4, 0x52, 0xf4, 0x04, 0x1a, 0x1e, 0xb1, 0x2d, 0xca, 0x36, 0x25, 0x69, 0x79, 0x9a,
	0xec, 0xd9, 0xde, 0x8a, 0x7b, 0x66, 0x36, 0xca, 0x0a, 0x2f, 0x6b, 0xa9, 0x93, 0x8f, 0x8e, 0x36,
	0x53, 0xa6, 0x35, 0xb5, 0xb6, 0xa7, 0x3e, 0x00, 0xd5, 0x23, 0x23, 0xd7, 0x1e, 0xc4, 0x98, 0x4a,
	0xb5, 0x3a, 0x73, 0xf9, 0x1c, 0x41, 0x7a, 0x01, 0x04, 0x6d, 0x17, 0xeb, 0xc6, 0xd0, 0x46, 0xdd,
	0xd8, 0x0d, 0xd0, 0xee, 0x6c, 0x0c, 0xda, 0xbb, 0x9d, 0xbd, 0x7f, 0x97, 0x41, 0xcb, 0x27, 0xdc,
	0x9e, 0x38, 0x8a, 0x4a, 0xfc, 0x28, 0xfa, 0x62, 0x29, 0xd1, 0xf2, 0xd7, 0xb9, 0xc3, 0x69, 0x1f,
	0xd4, 0x31, 0xb6, 0x22, 0x3a, 0xc4, 0x56, 0xfa, 0x27, 0x89, 0x21, 0x9c, 0xc9, 0xcd, 0x7c, 0xae,
	0xce, 0xa5, 0xe8, 0x31, 0x54, 0xc6, 0x94, 0x86, 0x02, 0x6e, 0x3a, 0xb7, 0xf4, 0xfb, 0xe7, 0xc7,
	0x98, 0x62, 0x9b, 0x92, 0xc8, 0xe4, 0xa3, 0x4c, 0x35, 0x8a, 0x42, 0x5b, 0x50, 0x89, 0xab, 0x7e,
	0x34, 0xcf, 0x8f, 0xe6, 0x2a, 0x36, 0x8a, 0x1e, 0x81, 0x42, 0xed, 0x50, 0x80, 0x88, 0x17, 0x48,
	0xff, 0x68, 0x1e, 0x89, 0x8d, 0x31, 0xc9, 0xc4, 0x09, 0x05, 0x75, 0xb8, 0xe4, 0xf2, 0x38, 0x27,
	0x99, 0x38, 0x61, 0xe7, 0x02, 0xb6, 0x96, 0x5e, 0x11, 0x69, 0x50, 0xbf, 0x3c, 0xfb, 0xf9, 0xec,
	0xdd, 0x6f, 0x67, 0xfa, 0x3d, 0xd4, 0x02, 0xf5, 0xf5, 0xc9, 0xa1, 0xd9, 0x7f, 0x75, 0x72, 0xd8,
	0xd7, 0x4b, 0xa8, 0x01, 0x15, 0xf6, 0xc0, 0x7a, 0x99, 0x5d, 0xb1, 0x87, 0xd2, 0x15, 0x54, 0x07,
	0xa5, 0x7f, 0x74, 0xae, 0x57, 0xd8, 0xc5, 0xe5, 0xf1, 0xb9, 0x5e, 0xed, 0x9c, 0xc2, 0xee, 0xaa,
	0x95, 0x40, 0x5d, 0x50, 0x28, 0xf5, 0xd6, 0x9e, 0x23, 0x79, 0xb6, 0x30, 0x61, 0xe7, 0xdf, 0x12,
	0x34, 0xf3, 0xeb, 0x83, 0x1e, 0x40, 0xcd, 0xc7, 0x74, 0x4c, 0x1c, 0xb1, 0xd7, 0xe2, 0x17, 0x42,
	0x50, 0x09, 0x2d, 0x3a, 0x16, 0xbb, 0xcd, 0xaf, 0xd9, 0x3d, 0xce, 0x76, 0x25, 0xb9, 0xc7, 0xe9,
	0x8d, 0x04, 0xbd, 0xd9, 0xca, 0xb6, 0x04, 0x9f, 0x4f, 0x39, 0x71, 0x1c, 0x1c, 0xc5, 0x7d, 0x72,
	0xe8, 0x38, 0x46, 0x95, 0xd7, 0x6a, 0x67, 0x79, 0x6f, 0xd8, 0xde, 0x66, 0xa2, 0xa4, 0x66, 0x17,
	0x7c, 0xed, 0x1f, 0x60, 0xfb, 0x86, 0x64, 0xa3, 0xcc, 0xdc, 0x87, 0x66, 0x7e, 0x9b, 0xb3, 0x17,
	0x28, 0xad, 0x78, 0x81, 0xf2, 0xfc, 0x05, 0x3a, 0x14, 0xb4, 0xdc, 0xce, 0x67, 0x92, 0x52, 0xee,
	0x1d, 0xbf, 0x84, 0x96, 0x4d, 0x82, 0x00, 0xdb, 0x54, 0x60, 0x95, 0xf9, 0x1b, 0x66, 0x53, 0xdc,
	0x4c, 0x76, 0x07, 0x41, 0x25, 0xc6, 0x81, 0x93, 0x2e, 0x18, 0xbb, 0x46, 0x06, 0xd4, 0x23, 0x6c,
	0x63, 0x77, 0xca, 0x1a, 0x3d, 0xe5, 0x89, 0x6a, 0xa6, 0x3f, 0x3b, 0xef, 0x40, 0xcb, 0x25, 0xd3,
	0xca, 0x59, 0xd3, 0x80, 0xe5, 0xd5, 0x01, 0x95, 0x85, 0x80, 0x5f, 0x3d, 0x06, 0x35, 0xeb, 0x01,
	0x59, 0x0e, 0x1e, 0x9f, 0x9c, 0x1e, 0x5e, 0xbe, 0xed, 0xeb, 0xf7, 0x10, 0x40, 0xed, 0xe8, 0xed,
	0x8b, 0x8b, 0x37, 0xc7, 0x7a, 0x69, 0x58, 0xe3, 0xd9, 0xb2, 0xf7, 0x5f, 0x00, 0x00, 0x00, 0xff,
	0xff, 0x3d, 0x10, 0xf5, 0x47, 0x25, 0x15, 0x00, 0x00,
}
