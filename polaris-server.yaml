# Tencent is pleased to support the open source community by making Polaris available.
#
# Copyright (C) 2019 THL A29 Limited, a Tencent company. All rights reserved.
#
# Licensed under the BSD 3-Clause License (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# https://opensource.org/licenses/BSD-3-Clause
#
# Unless required by applicable law or agreed to in writing, software distributed
# under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
# CONDITIONS OF ANY KIND, either express or implied. See the License for the
# specific language governing permissions and limitations under the License.

bootstrap:
  logger:
    config:
      rotateOutputPath: log/polaris-config.log
      errorRotateOutputPath: log/polaris-config-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      # - stdout
      # errorOutputPaths:
      # - stderr
    auth:
      rotateOutputPath: log/polaris-auth.log
      errorRotateOutputPath: log/polaris-auth-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    store:
      rotateOutputPath: log/polaris-store.log
      errorRotateOutputPath: log/polaris-store-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    cache:
      rotateOutputPath: log/polaris-cache.log
      errorRotateOutputPath: log/polaris-cache-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    naming:
      rotateOutputPath: log/polaris-naming.log
      errorRotateOutputPath: log/polaris-naming-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    healthcheck:
      rotateOutputPath: log/polaris-healthcheck.log
      errorRotateOutputPath: log/polaris-healthcheck-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    xdsv3:
      rotateOutputPath: log/polaris-xdsv3.log
      errorRotateOutputPath: log/polaris-xdsv3-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    apiserver:
      rotateOutputPath: log/polaris-apiserver.log
      errorRotateOutputPath: log/polaris-apiserver-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    defaultAuth:
      rotateOutputPath: log/polaris-defaultauth.log
      errorRotateOutputPath: log/polaris-password-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    discoverEventLocal:
      rotateOutputPath: log/polaris-discoverevent.log
      errorRotateOutputPath: log/polaris-discoverevent-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    discoverLocal:
      rotateOutputPath: log/polaris-discoverstat.log
      errorRotateOutputPath: log/polaris-discoverstat-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    token-bucket:
      rotateOutputPath: log/polaris-ratelimit.log
      errorRotateOutputPath: log/polaris-ratelimit-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    local:
      rotateOutputPath: log/polaris-statis.log
      errorRotateOutputPath: log/polaris-statis-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    HistoryLogger:
      rotateOutputPath: log/polaris-history.log
      errorRotateOutputPath: log/polaris-history-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      rotationMaxDurationForHour: 24
      outputLevel: info
      # outputPaths:
      #   - stdout
      # errorOutputPaths:
      #   - stderr
    default:
      rotateOutputPath: log/polaris-default.log
      errorRotateOutputPath: log/polaris-default-error.log
      rotationMaxSize: 100
      rotationMaxBackups: 10
      rotationMaxAge: 7
      outputLevel: info
      outputPaths:
        - stdout
      errorOutputPaths:
        - stderr
  #
  startInOrder:
    open: true
    key: sz
  polaris_service:
    # probe_address: ##DB_ADDR##
    enable_register: true
    isolated: false
    services:
      - name: polaris.checker
        protocols:
          - service-grpc
apiservers:
  - name: service-eureka
    option:
      listenIP: "0.0.0.0"
      listenPort: 8761
      namespace: default
      owner: polaris
      refreshInterval: 10
      deltaExpireInterval: 60
      unhealthyExpireInterval: 180
      connLimit:
        openConnLimit: false
        maxConnPerHost: 1024
        maxConnLimit: 10240
        whiteList: 127.0.0.1
        purgeCounterInterval: 10s
        purgeCounterExpired: 5s
  - name: api-http
    option:
      listenIP: "0.0.0.0"
      listenPort: 8090
      enablePprof: true # debug pprof
      enableSwagger: true
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 5120
        whiteList: 127.0.0.1
        purgeCounterInterval: 10s
        purgeCounterExpired: 5s
    api:
      admin:
        enable: true
      console:
        enable: true
        include: [default]
      client:
        enable: true
        include: [discover, register, healthcheck]
      config:
        enable: true
        include: [default]
  - name: service-grpc
    option:
      listenIP: "0.0.0.0"
      listenPort: 8091
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 5120
      enableCacheProto: true
      sizeCacheProto: 128
      tls:
        certFile: ""
        keyFile: ""
        trustedCAFile: ""
    api:
      client:
        enable: true
        include: [discover, register, healthcheck]
  - name: config-grpc
    option:
      listenIP: "0.0.0.0"
      listenPort: 8093
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 5120
    api:
      client:
        enable: true
  - name: xds-v3
    option:
      listenIP: "0.0.0.0"
      listenPort: 15010
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 10240
  - name: prometheus-sd
    option:
      listenIP: "0.0.0.0"
      listenPort: 9000
      connLimit:
        openConnLimit: false
        maxConnPerHost: 128
        maxConnLimit: 10240
  # - name: service-l5
  #   option:
  #     listenIP: 0.0.0.0
  #     listenPort: 7779
  #     clusterName: cl5.discover
auth:
  name: defaultAuth
  option:
    salt: polarismesh@2021
    consoleOpen: true
    clientOpen: false
namespace:
  autoCreate: true
naming:
  auth:
    open: false
  batch:
    register:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 128
      concurrency: 128
      dropExpireTask: true
      taskLife: 30s
    deregister:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 128
      concurrency: 128
    clientRegister:
      open: true
      queueSize: 10240
      waitTime: 32s
      maxBatchCount: 1024
      concurrency: 64
    clientDeregister:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 32
      concurrency: 64
healthcheck:
  open: true
  service: polaris.checker
  slotNum: 30
  minCheckInterval: 1s
  maxCheckInterval: 30s
  clientReportInterval: 120s
  batch:
    heartbeat:
      open: true
      queueSize: 10240
      waitTime: 32ms
      maxBatchCount: 32
      concurrency: 64
  checkers:
    - name: heartbeatMemory
#  - name: heartbeatRedis
#    option:
#      kvAddr: ##REDIS_ADDR##
#       # ACL user from redis v6.0, remove it if ACL is not available
#      kvUser: ##REDIS_USER#
#      kvPasswd: ##REDIS_PWD##
#      poolSize: 200
#      minIdleConns: 30
#      idleTimeout: 120s
#      connectTimeout: 200ms
#      msgTimeout: 200ms
#      concurrency: 200
#      withTLS: false
config:
  open: true
cache:
  open: true
  resources:
    - name: service
      option:
        disableBusiness: false
        needMeta: true
    - name: instance
      option:
        disableBusiness: false
        needMeta: true
    - name: routingConfig
    - name: rateLimitConfig
    - name: circuitBreakerConfig
    - name: users
    - name: strategyRule
    - name: namespace
    - name: client
    - name: configFile
      option:
        expireTimeAfterWrite: 3600
store:
  name: boltdbStore
  option:
    path: ./polaris.bolt
plugin:
  # whitelist:
  #   name: whitelist
  #   option:
  #     ip: [127.0.0.1]
  history:
    name: HistoryLogger
  discoverEvent:
    name: discoverEventLocal
    # option:
    #   queueSize: 1024
    #   outputPath: ./discover-event
    #   rotationMaxSize: 500
    #   rotationMaxAge: 8
    #   rotationMaxBackups: 100
  discoverStatis:
    name: discoverLocal
    option:
      interval: 60
  statis:
    name: local
    option:
      interval: 60
  ratelimit:
    name: token-bucket
    option:
      remote-conf: false
      ip-limit:
        open: true
        global:
          open: true
          bucket: 300
          rate: 200
        resource-cache-amount: 1024
        white-list: [127.0.0.1]
      instance-limit:
        open: true
        global:
          bucket: 200
          rate: 100
        resource-cache-amount: 1024
      api-limit:
        open: false
        rules:
          - name: store-read
            limit:
              open: true
              bucket: 2000
              rate: 1000
          - name: store-write
            limit:
              open: true
              bucket: 1000
              rate: 500
        apis:
          - name: "POST:/v1/naming/services"
            rule: store-write
          - name: "PUT:/v1/naming/services"
            rule: store-write
          - name: "POST:/v1/naming/services/delete"
            rule: store-write
          - name: "GET:/v1/naming/services"
            rule: store-read
          - name: "GET:/v1/naming/services/count"
            rule: store-read
