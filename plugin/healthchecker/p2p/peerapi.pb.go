// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peerapi.proto

package heartbeatp2p

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type GetRecordsRequest struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRecordsRequest) Reset()         { *m = GetRecordsRequest{} }
func (m *GetRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*GetRecordsRequest) ProtoMessage()    {}
func (*GetRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_peerapi_6faebb4bf5ae7e85, []int{0}
}
func (m *GetRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordsRequest.Unmarshal(m, b)
}
func (m *GetRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordsRequest.Marshal(b, m, deterministic)
}
func (dst *GetRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordsRequest.Merge(dst, src)
}
func (m *GetRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_GetRecordsRequest.Size(m)
}
func (m *GetRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordsRequest proto.InternalMessageInfo

func (m *GetRecordsRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type GetRecordsResponse struct {
	Records              []*HeartbeatRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetRecordsResponse) Reset()         { *m = GetRecordsResponse{} }
func (m *GetRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*GetRecordsResponse) ProtoMessage()    {}
func (*GetRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_peerapi_6faebb4bf5ae7e85, []int{1}
}
func (m *GetRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRecordsResponse.Unmarshal(m, b)
}
func (m *GetRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRecordsResponse.Marshal(b, m, deterministic)
}
func (dst *GetRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRecordsResponse.Merge(dst, src)
}
func (m *GetRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_GetRecordsResponse.Size(m)
}
func (m *GetRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetRecordsResponse proto.InternalMessageInfo

func (m *GetRecordsResponse) GetRecords() []*HeartbeatRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type DelRecordsRequest struct {
	Keys                 []string `protobuf:"bytes,1,rep,name=keys,proto3" json:"keys,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DelRecordsRequest) Reset()         { *m = DelRecordsRequest{} }
func (m *DelRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*DelRecordsRequest) ProtoMessage()    {}
func (*DelRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_peerapi_6faebb4bf5ae7e85, []int{2}
}
func (m *DelRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRecordsRequest.Unmarshal(m, b)
}
func (m *DelRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRecordsRequest.Marshal(b, m, deterministic)
}
func (dst *DelRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRecordsRequest.Merge(dst, src)
}
func (m *DelRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_DelRecordsRequest.Size(m)
}
func (m *DelRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DelRecordsRequest proto.InternalMessageInfo

func (m *DelRecordsRequest) GetKeys() []string {
	if m != nil {
		return m.Keys
	}
	return nil
}

type DelRecordsResponse struct {
	Records              []*HeartbeatRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DelRecordsResponse) Reset()         { *m = DelRecordsResponse{} }
func (m *DelRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*DelRecordsResponse) ProtoMessage()    {}
func (*DelRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_peerapi_6faebb4bf5ae7e85, []int{3}
}
func (m *DelRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DelRecordsResponse.Unmarshal(m, b)
}
func (m *DelRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DelRecordsResponse.Marshal(b, m, deterministic)
}
func (dst *DelRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DelRecordsResponse.Merge(dst, src)
}
func (m *DelRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_DelRecordsResponse.Size(m)
}
func (m *DelRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DelRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DelRecordsResponse proto.InternalMessageInfo

func (m *DelRecordsResponse) GetRecords() []*HeartbeatRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type HeartbeatRecord struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	Exist                bool     `protobuf:"varint,3,opt,name=exist,proto3" json:"exist,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartbeatRecord) Reset()         { *m = HeartbeatRecord{} }
func (m *HeartbeatRecord) String() string { return proto.CompactTextString(m) }
func (*HeartbeatRecord) ProtoMessage()    {}
func (*HeartbeatRecord) Descriptor() ([]byte, []int) {
	return fileDescriptor_peerapi_6faebb4bf5ae7e85, []int{4}
}
func (m *HeartbeatRecord) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartbeatRecord.Unmarshal(m, b)
}
func (m *HeartbeatRecord) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartbeatRecord.Marshal(b, m, deterministic)
}
func (dst *HeartbeatRecord) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartbeatRecord.Merge(dst, src)
}
func (m *HeartbeatRecord) XXX_Size() int {
	return xxx_messageInfo_HeartbeatRecord.Size(m)
}
func (m *HeartbeatRecord) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartbeatRecord.DiscardUnknown(m)
}

var xxx_messageInfo_HeartbeatRecord proto.InternalMessageInfo

func (m *HeartbeatRecord) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *HeartbeatRecord) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *HeartbeatRecord) GetExist() bool {
	if m != nil {
		return m.Exist
	}
	return false
}

type PutRecordsRequest struct {
	Records              []*HeartbeatRecord `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *PutRecordsRequest) Reset()         { *m = PutRecordsRequest{} }
func (m *PutRecordsRequest) String() string { return proto.CompactTextString(m) }
func (*PutRecordsRequest) ProtoMessage()    {}
func (*PutRecordsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_peerapi_6faebb4bf5ae7e85, []int{5}
}
func (m *PutRecordsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRecordsRequest.Unmarshal(m, b)
}
func (m *PutRecordsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRecordsRequest.Marshal(b, m, deterministic)
}
func (dst *PutRecordsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRecordsRequest.Merge(dst, src)
}
func (m *PutRecordsRequest) XXX_Size() int {
	return xxx_messageInfo_PutRecordsRequest.Size(m)
}
func (m *PutRecordsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRecordsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PutRecordsRequest proto.InternalMessageInfo

func (m *PutRecordsRequest) GetRecords() []*HeartbeatRecord {
	if m != nil {
		return m.Records
	}
	return nil
}

type PutRecordsResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PutRecordsResponse) Reset()         { *m = PutRecordsResponse{} }
func (m *PutRecordsResponse) String() string { return proto.CompactTextString(m) }
func (*PutRecordsResponse) ProtoMessage()    {}
func (*PutRecordsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_peerapi_6faebb4bf5ae7e85, []int{6}
}
func (m *PutRecordsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PutRecordsResponse.Unmarshal(m, b)
}
func (m *PutRecordsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PutRecordsResponse.Marshal(b, m, deterministic)
}
func (dst *PutRecordsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PutRecordsResponse.Merge(dst, src)
}
func (m *PutRecordsResponse) XXX_Size() int {
	return xxx_messageInfo_PutRecordsResponse.Size(m)
}
func (m *PutRecordsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PutRecordsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PutRecordsResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*GetRecordsRequest)(nil), "heartbeatp2p.GetRecordsRequest")
	proto.RegisterType((*GetRecordsResponse)(nil), "heartbeatp2p.GetRecordsResponse")
	proto.RegisterType((*DelRecordsRequest)(nil), "heartbeatp2p.DelRecordsRequest")
	proto.RegisterType((*DelRecordsResponse)(nil), "heartbeatp2p.DelRecordsResponse")
	proto.RegisterType((*HeartbeatRecord)(nil), "heartbeatp2p.HeartbeatRecord")
	proto.RegisterType((*PutRecordsRequest)(nil), "heartbeatp2p.PutRecordsRequest")
	proto.RegisterType((*PutRecordsResponse)(nil), "heartbeatp2p.PutRecordsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// CheckerPeerServiceClient is the client API for CheckerPeerService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CheckerPeerServiceClient interface {
	GetRecords(ctx context.Context, in *GetRecordsRequest, opts ...grpc.CallOption) (*GetRecordsResponse, error)
	PutRecords(ctx context.Context, opts ...grpc.CallOption) (CheckerPeerService_PutRecordsClient, error)
	DelRecords(ctx context.Context, opts ...grpc.CallOption) (CheckerPeerService_DelRecordsClient, error)
}

type checkerPeerServiceClient struct {
	cc *grpc.ClientConn
}

func NewCheckerPeerServiceClient(cc *grpc.ClientConn) CheckerPeerServiceClient {
	return &checkerPeerServiceClient{cc}
}

func (c *checkerPeerServiceClient) GetRecords(ctx context.Context, in *GetRecordsRequest, opts ...grpc.CallOption) (*GetRecordsResponse, error) {
	out := new(GetRecordsResponse)
	err := c.cc.Invoke(ctx, "/heartbeatp2p.CheckerPeerService/GetRecords", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *checkerPeerServiceClient) PutRecords(ctx context.Context, opts ...grpc.CallOption) (CheckerPeerService_PutRecordsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CheckerPeerService_serviceDesc.Streams[0], "/heartbeatp2p.CheckerPeerService/PutRecords", opts...)
	if err != nil {
		return nil, err
	}
	x := &checkerPeerServicePutRecordsClient{stream}
	return x, nil
}

type CheckerPeerService_PutRecordsClient interface {
	Send(*PutRecordsRequest) error
	Recv() (*PutRecordsResponse, error)
	grpc.ClientStream
}

type checkerPeerServicePutRecordsClient struct {
	grpc.ClientStream
}

func (x *checkerPeerServicePutRecordsClient) Send(m *PutRecordsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *checkerPeerServicePutRecordsClient) Recv() (*PutRecordsResponse, error) {
	m := new(PutRecordsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *checkerPeerServiceClient) DelRecords(ctx context.Context, opts ...grpc.CallOption) (CheckerPeerService_DelRecordsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CheckerPeerService_serviceDesc.Streams[1], "/heartbeatp2p.CheckerPeerService/DelRecords", opts...)
	if err != nil {
		return nil, err
	}
	x := &checkerPeerServiceDelRecordsClient{stream}
	return x, nil
}

type CheckerPeerService_DelRecordsClient interface {
	Send(*DelRecordsRequest) error
	Recv() (*DelRecordsResponse, error)
	grpc.ClientStream
}

type checkerPeerServiceDelRecordsClient struct {
	grpc.ClientStream
}

func (x *checkerPeerServiceDelRecordsClient) Send(m *DelRecordsRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *checkerPeerServiceDelRecordsClient) Recv() (*DelRecordsResponse, error) {
	m := new(DelRecordsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// CheckerPeerServiceServer is the server API for CheckerPeerService service.
type CheckerPeerServiceServer interface {
	GetRecords(context.Context, *GetRecordsRequest) (*GetRecordsResponse, error)
	PutRecords(CheckerPeerService_PutRecordsServer) error
	DelRecords(CheckerPeerService_DelRecordsServer) error
}

func RegisterCheckerPeerServiceServer(s *grpc.Server, srv CheckerPeerServiceServer) {
	s.RegisterService(&_CheckerPeerService_serviceDesc, srv)
}

func _CheckerPeerService_GetRecords_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecordsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CheckerPeerServiceServer).GetRecords(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/heartbeatp2p.CheckerPeerService/GetRecords",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CheckerPeerServiceServer).GetRecords(ctx, req.(*GetRecordsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CheckerPeerService_PutRecords_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CheckerPeerServiceServer).PutRecords(&checkerPeerServicePutRecordsServer{stream})
}

type CheckerPeerService_PutRecordsServer interface {
	Send(*PutRecordsResponse) error
	Recv() (*PutRecordsRequest, error)
	grpc.ServerStream
}

type checkerPeerServicePutRecordsServer struct {
	grpc.ServerStream
}

func (x *checkerPeerServicePutRecordsServer) Send(m *PutRecordsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *checkerPeerServicePutRecordsServer) Recv() (*PutRecordsRequest, error) {
	m := new(PutRecordsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _CheckerPeerService_DelRecords_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(CheckerPeerServiceServer).DelRecords(&checkerPeerServiceDelRecordsServer{stream})
}

type CheckerPeerService_DelRecordsServer interface {
	Send(*DelRecordsResponse) error
	Recv() (*DelRecordsRequest, error)
	grpc.ServerStream
}

type checkerPeerServiceDelRecordsServer struct {
	grpc.ServerStream
}

func (x *checkerPeerServiceDelRecordsServer) Send(m *DelRecordsResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *checkerPeerServiceDelRecordsServer) Recv() (*DelRecordsRequest, error) {
	m := new(DelRecordsRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _CheckerPeerService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "heartbeatp2p.CheckerPeerService",
	HandlerType: (*CheckerPeerServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetRecords",
			Handler:    _CheckerPeerService_GetRecords_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "PutRecords",
			Handler:       _CheckerPeerService_PutRecords_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "DelRecords",
			Handler:       _CheckerPeerService_DelRecords_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "peerapi.proto",
}

func init() { proto.RegisterFile("peerapi.proto", fileDescriptor_peerapi_6faebb4bf5ae7e85) }

var fileDescriptor_peerapi_6faebb4bf5ae7e85 = []byte{
	// 286 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x99, 0xe6, 0xff, 0xd5, 0x5e, 0x15, 0xed, 0xa5, 0x8b, 0x20, 0x88, 0x21, 0x1b, 0xb3,
	0x0a, 0x12, 0x17, 0x3e, 0x80, 0x82, 0x2e, 0x94, 0x96, 0xe9, 0x13, 0xa4, 0xf1, 0x40, 0x43, 0x8a,
	0x19, 0x67, 0x26, 0xc5, 0x3e, 0x85, 0xaf, 0x2c, 0x49, 0x2c, 0x89, 0x13, 0x04, 0xd1, 0xdd, 0xdc,
	0x9b, 0x93, 0xef, 0xcc, 0xdc, 0x73, 0xe9, 0x58, 0x01, 0x3a, 0x55, 0x79, 0xac, 0x74, 0x69, 0x4b,
	0x3e, 0x5a, 0x21, 0xd5, 0x76, 0x89, 0xd4, 0xaa, 0x44, 0x85, 0x97, 0x34, 0xb9, 0x87, 0x95, 0xc8,
	0x4a, 0xfd, 0x6c, 0x24, 0x5e, 0x2b, 0x18, 0xcb, 0x4c, 0xff, 0x0a, 0x6c, 0x8d, 0x2f, 0x02, 0x2f,
	0x1a, 0xcb, 0xe6, 0x1c, 0x3e, 0x11, 0xf7, 0x85, 0x46, 0x95, 0x2f, 0x06, 0x7c, 0x43, 0xfb, 0xba,
	0x6d, 0x35, 0xe2, 0xc3, 0xe4, 0x3c, 0xee, 0xe3, 0xe3, 0x87, 0x5d, 0xd1, 0xfe, 0x28, 0x77, 0xea,
	0xda, 0xf7, 0x0e, 0xeb, 0x9f, 0xf9, 0xf6, 0x85, 0x7f, 0xf5, 0x9d, 0xd1, 0x89, 0xf3, 0x8d, 0x4f,
	0xc9, 0x2b, 0xb0, 0xf5, 0x45, 0x20, 0xa2, 0xb1, 0xac, 0x8f, 0x3c, 0xa5, 0xff, 0x9b, 0x74, 0x5d,
	0xc1, 0x1f, 0x35, 0xbd, 0xb6, 0xa8, 0xbb, 0x78, 0xcb, 0x8d, 0xf5, 0xbd, 0x40, 0x44, 0x07, 0xb2,
	0x2d, 0xc2, 0x47, 0x9a, 0xcc, 0x2b, 0x77, 0x80, 0xbf, 0xbe, 0xde, 0x94, 0xb8, 0x4f, 0x6b, 0x5f,
	0x9b, 0xbc, 0x8f, 0x88, 0x6f, 0x57, 0xc8, 0x0a, 0xe8, 0x39, 0xa0, 0x17, 0xd0, 0x9b, 0x3c, 0x03,
	0xcf, 0x88, 0xba, 0x48, 0xf8, 0xe2, 0xab, 0xc5, 0x20, 0xd5, 0xb3, 0xe0, 0x7b, 0xc1, 0xe7, 0x54,
	0x17, 0x44, 0x9d, 0xbb, 0x0b, 0x1c, 0xbc, 0xd2, 0x05, 0x0e, 0x2f, 0x1e, 0x89, 0x2b, 0x51, 0x43,
	0xbb, 0x00, 0x5d, 0xe8, 0x60, 0x07, 0x5c, 0xe8, 0x30, 0xfb, 0x1a, 0xba, 0xdc, 0x6b, 0x76, 0xf9,
	0xfa, 0x23, 0x00, 0x00, 0xff, 0xff, 0x83, 0xd4, 0xc0, 0x11, 0xdc, 0x02, 0x00, 0x00,
}
