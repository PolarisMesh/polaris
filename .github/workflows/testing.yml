name: Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write

# Always force the use of Go modules
env:
  GO111MODULE: on

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
      # Setup the environment.
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.16.5
      # Checkout latest code
      - name: Checkout repo
        uses: actions/checkout@v2

      # Execute vert check
      - name: Vert check
        run: bash vert.sh -install && bash vert.sh

      # Compile
      - name: Build server
        run: bash build.sh
        
      # Run unit tests
      - name: run tests
        run: |
          pushd ./cache
          go test -v
          popd
          pushd ./plugin/ratelimit/token
          go test -v
          popd
          pushd ./store/sqldb
          go test -v
          popd
          pushd ./store/boltdb
          go test -v
          popd
          pushd ./auth/defaultauth
          go test -v
          popd
          
      # Run interface tests
      - name: run interface tests
        run: |
          work_dir=$(ls | grep polaris-server-release | sed -n '1p')
          echo "work_dir is $work_dir"
          cd $work_dir
          ls -alR
          chmod +x ./tool/*.sh
          ./tool/start.sh

          sed -i 's/consoleOpen: \(true\|false\)/consoleOpen: false/g' polaris-server.yaml

          cd ..
          # 先测试普通的集成测试
          pushd ./test
          go test -count=1 -v -tags integration
          popd
          cd $work_dir
          ./tool/stop.sh
          cd ..

          # 进行配置中心的集成测试


          # 针对服务发现进行集成测试


          # 针对开启鉴权的集成测试


      - name: Go Test
        run: |
          go mod vendor && go test ./pkg/... -coverprofile=coverage.txt -covermode=atomic

      - name: Coverage
        run: bash <(curl -s https://codecov.io/bash)