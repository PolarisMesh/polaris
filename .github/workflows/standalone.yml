name: Standalone

on:
  workflow_dispatch:
    inputs:
      server_version:
        description: 'tag version for polaris'
        required: true
      console_version:
        description: 'tag version for polaris-console'
        required: true

jobs:
  release:
    name: Release polaris standalone
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.server_version }}

      - name: Build
        id: build
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          SERVER_VERSION: ${{ github.event.inputs.server_version }}
          CONSOLE_VERSION: ${{ github.event.inputs.console_version }}
        run: |
          set -e
          cd standalone
          mkdir route-rule
          mv rule.yaml route-rule/
          mkdir database
          mv ../store/defaultStore/polaris_server.sql database/
          SERVER_PKG_NAME=polaris-server-release_${SERVER_VERSION}.${GOOS}.${GOARCH}.tar.gz
          wget -T10 -t3 https://github.com/PolarisMesh/polaris/releases/download/${SERVER_VERSION}/${SERVER_PKG_NAME} --no-check-certificate
          CONSOLE_PKG_NAME=polaris-console-release_${CONSOLE_VERSION}.${GOOS}.${GOARCH}.tar.gz
          wget -T10 -t3 https://github.com/PolarisMesh/polaris-console/releases/download/${CONSOLE_VERSION}/${CONSOLE_PKG_NAME} --no-check-certificate
          PACKAGE_NAME=polaris-standalone-release_${SERVER_VERSION}.${GOOS}.${GOARCH}.tar.gz
          tar czf ${PACKAGE_NAME} *
          mv ${PACKAGE_NAME} ../
          echo ::set-output name=name::${PACKAGE_NAME}

      - name: Get Release by Tag
        id: get_release_by_tag
        uses: jonfriesen/get-release-by-tag@v0.0.11
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.server_version }}

      - name: Upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release_by_tag.outputs.upload_url }}
          asset_path: ./${{ steps.build.outputs.name }}
          asset_name: ${{ steps.build.outputs.name }}
          asset_content_type: application/gzip
